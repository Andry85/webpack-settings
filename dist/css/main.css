body{background:red}.arrowIcon{background:url("/images/svgsprite.svg#arrow-fragment") center no-repeat;width:9px;height:16px}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbWFpbi5zY3NzIiwid2VicGFjazovLy9fc3ByaXRlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLEtBQ0ksZUFHSixXQzhESSx3RUQ1REEsVUFDQSxZIiwiZmlsZSI6ImNzcy9tYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdzcHJpdGVzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnRzJztcblxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiByZWQ7XG59XG5cbi5hcnJvd0ljb24ge1xuICAgIEBpbmNsdWRlIHNwcml0ZSgnYXJyb3cnKTtcbiAgICB3aWR0aDogOXB4O1xuICAgIGhlaWdodDogMTZweDtcbn1cblxuIiwiJHNwcml0ZXM6IChcbiAgICAnYXJyb3cnOiBcIi9pbWFnZXMvc3Znc3ByaXRlLnN2ZyNhcnJvdy1mcmFnbWVudFwiLFxuICAgICdleHRlcm5hbC1saW5rLWxpbmUnOiBcIi9pbWFnZXMvc3Znc3ByaXRlLnN2ZyNleHRlcm5hbC1saW5rLWxpbmUtZnJhZ21lbnRcIlxuKTtcblxuJHNpemVzOiAoXG4gICAgJ2Fycm93JzogKFxuICAgICAgICAnd2lkdGgnOiA5cHgsXG4gICAgICAgICdoZWlnaHQnOiAxNnB4XG4gICAgKSxcbiAgICAnZXh0ZXJuYWwtbGluay1saW5lJzogKFxuICAgICAgICAnd2lkdGgnOiAxNnB4LFxuICAgICAgICAnaGVpZ2h0JzogMTZweFxuICAgIClcbik7XG5cbiR2YXJpYWJsZXM6IChcbiAgICAvKiBFTVBUWSAqL1xuKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dhbGRlbWFyZm0vc2Fzcy1zdmctdXJpL2Jsb2IvdjEuMC4wL19zdmctdXJpLnNjc3NcbkBmdW5jdGlvbiBzcHJpdGUtc3RyLXJlcGxhY2UoJHN0cmluZywgJHNlYXJjaCwgJHJlcGxhY2U6ICcnKSB7XG4gICAgJGluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJHNlYXJjaCk7XG5cbiAgICBAaWYgdHlwZS1vZigkcmVwbGFjZSkgPT0gJ251bGwnIHtcbiAgICAgICAgJHJlcGxhY2U6ICcnO1xuICAgIH1cblxuICAgIEBpZiAoICRpbmRleCApIHtcbiAgICAgICAgQHJldHVybiBzdHItc2xpY2UoJHN0cmluZywgMSwgJGluZGV4IC0gMSkgKyAkcmVwbGFjZSArIHNwcml0ZS1zdHItcmVwbGFjZShzdHItc2xpY2UoJHN0cmluZywgJGluZGV4ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSksICRzZWFyY2gsICRyZXBsYWNlKTtcbiAgICB9XG5cbiAgICBAcmV0dXJuICRzdHJpbmc7XG59XG5cbkBmdW5jdGlvbiBzcHJpdGUtc3ZnLXVyaSgkdmFsdWUpIHtcbiAgICAkZW5jb2RlZDogJyc7XG4gICAgJHNsaWNlOiAyMDAwO1xuICAgICRpbmRleDogMDtcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggY2VpbChzdHItbGVuZ3RoKCR2YWx1ZSkgLyAkc2xpY2UpIHtcbiAgICAgICAgJGNodW5rOiBzdHItc2xpY2UoJHZhbHVlLCAkaW5kZXgsICRpbmRleCArICRzbGljZSAtIDEpO1xuICAgICAgICAkY2h1bms6IHNwcml0ZS1zdHItcmVwbGFjZSgkY2h1bmssICdcIicsIFwiJ1wiKTtcbiAgICAgICAgJGNodW5rOiBzcHJpdGUtc3RyLXJlcGxhY2UoJGNodW5rLCAnPCcsICclM0MnKTtcbiAgICAgICAgJGNodW5rOiBzcHJpdGUtc3RyLXJlcGxhY2UoJGNodW5rLCAnPicsICclM0UnKTtcbiAgICAgICAgJGNodW5rOiBzcHJpdGUtc3RyLXJlcGxhY2UoJGNodW5rLCAnJicsICclMjYnKTtcbiAgICAgICAgJGNodW5rOiBzcHJpdGUtc3RyLXJlcGxhY2UoJGNodW5rLCAnIycsICclMjMnKTtcbiAgICAgICAgJGVuY29kZWQ6ICN7JGVuY29kZWR9I3skY2h1bmt9O1xuICAgICAgICAkaW5kZXg6ICRpbmRleCArICRzbGljZTtcbiAgICB9XG5cbiAgICBAcmV0dXJuICRlbmNvZGVkO1xufVxuXG5AbWl4aW4gc3ByaXRlKCRuYW1lLCAkdXNlci12YXJpYWJsZXM6ICgpLCAkaW5jbHVkZS1zaXplOiBmYWxzZSkge1xuICAgICRzcHJpdGU6IG1hcC1nZXQoJHNwcml0ZXMsICRuYW1lKTtcblxuICAgIC8vIEluamVjdCB2YXJpYWJsZXNcbiAgICAkZGVmYXVsdC12YXJpYWJsZXM6IG1hcC1nZXQoJHZhcmlhYmxlcywgJG5hbWUpO1xuICAgIEBpZiB0eXBlLW9mKCRkZWZhdWx0LXZhcmlhYmxlcykgPT0gJ21hcCcge1xuICAgICAgICBAZWFjaCAka2V5LCAkdmFsdWUgaW4gbWFwLW1lcmdlKCRkZWZhdWx0LXZhcmlhYmxlcywgJHVzZXItdmFyaWFibGVzKSB7XG4gICAgICAgICAgICBAaWYgKCBub3QgbWFwLWhhcy1rZXkoJGRlZmF1bHQtdmFyaWFibGVzLCAka2V5KSApIHtcbiAgICAgICAgICAgICAgICBAd2FybiAnU3ByaXRlIFxcJyN7JG5hbWV9XFwnIGRvZXMgbm90IHN1cHBvcnQgdmFyaWFibGUgbmFtZWQgXFwnI3ska2V5fVxcJyc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICRzcHJpdGU6IHNwcml0ZS1zdHItcmVwbGFjZSgkc3ByaXRlLCAnX19fI3ska2V5fV9fXycsIHNwcml0ZS1zdmctdXJpKHF1b3RlKCN7JHZhbHVlfSkpKTtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgdHlwZS1vZigkdXNlci12YXJpYWJsZXMpID09ICdtYXAnIHtcbiAgICAgICAgQHdhcm4gJ1Nwcml0ZSBcXCcjeyRuYW1lfVxcJyBkb2VzIG5vdCBjb250YWluIGFueSB2YXJpYWJsZXMnO1xuICAgIH1cblxuICAgIGJhY2tncm91bmQ6IHVybCgkc3ByaXRlKSBjZW50ZXIgbm8tcmVwZWF0O1xuXG4gICAgQGlmICRpbmNsdWRlLXNpemUge1xuICAgICAgICAkc2l6ZTogbWFwLWdldCgkc2l6ZXMsICRuYW1lKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBtYXAtZ2V0KCRzaXplLCB3aWR0aCkgbWFwLWdldCgkc2l6ZSwgaGVpZ2h0KTtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9*/